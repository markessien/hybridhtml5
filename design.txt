* Critical is a quick start. Of all the languages I have used so far, Visual Basic has allowed the quickest start, because of the simple in-you-face form where you can drag standard components on to. The double clicking of buttons to add funtionality is also intuitive and fast

* There should be a simple main file that is supposed to stay slim and delegate commands to various components. So basically, the entry point of the application is not a main or load function where various things are initialised, but are the button events, similar to VB. The load function is there, but it's just not shown till it is needed. This means that in the default project, everything should work and be visible without a single line of code being written

* There is an overall App object that is available in Javascript as well as the hosting environment. This App object is used to access variables and things that are in other windows. For example, an iPhone app may have 5 tabs. Each tab is a html5 window wrapped in a web-view. Within the webview, there is an App object, so tab1 can access tab2 like this: App.getWindow("tab1).executeSomething();

* All native functionality is accessed the same way. For example App.showCamera(). Hosting environments that do no support the camera will return an error code, like in COM : E_NOTIMPL

* The framework offers a consistent location for images and javascript files

* There are a large number of controls. There are 10 or so standard buttons, but rather than having superclasses on these controls, the framework adds OTHER controls that do the same thing. For example, there will be a standard Button. But there could be another HoverButton that uses a completely different API and works in a different manner. The idea is this: There is a huge wealth of jquery plug-ins out there. All of these jquery plugins cannot be ported to work with exactly our model. So instead of trying to make things consistent, we simply support all of them. So even though users can make standard apps using the standard buttons, when they are dissatisfied, they simple browse through the gallery till they find something that they like and they instanciate it as they wish

* there should be an attempt to make complex things as easily instanciatable as possible. Most frameworks try to limit themselves to the basic building blocks, this framework should make it possible to instanciate things like "flipcard polaroid gallery component" with a few lines of code. Of course, these components are jquery (or other framework) controls

* Adding controls to your 'form' should be done in a consistent manner

